#!/usr/local/bin/python

import sys
import os
import shutil
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
installer = "/usr/local/lib/gbi/"
sys.path.append(installer)
from language import Language
from keyboard import Keyboard
from timezone import TimeZone
from network_setup import network_setup
from add_admin import AddUser
from setup_system import setup_window, installProgress
# from add_users import AddUsers


logo = "/usr/local/lib/gbi/image/logo.png"


class MainWindow():
    """Main window class."""

    def delete(self, widget, event=None):
        """Close the main window."""
        if os.path.exists('/tmp/.gbi'):
            shutil.rmtree('/tmp/.gbi')
        Gtk.main_quit()
        return False

    def next_page(self, widget):
        self.initial_setup_page()

    def initial_setup_page(self):
        page = self.notebook.get_current_page()
        if page == 0:
            #self.welcome.save_language()
            kbbox = Gtk.VBox(homogeneous=False, spacing=0)
            kbbox.show()
            self.kb = Keyboard(self.next_button)
            get_kb = self.kb.get_model()
            kbbox.pack_start(get_kb, True, True, 0)
            label = Gtk.Label(label="Keyboard")
            self.notebook.insert_page(kbbox, label, 1)
            self.window.show_all()
            self.notebook.next_page()
            self.skip_button.hide()
            self.next_button.set_sensitive(True)
        elif page == 1:
            #self.kb.save_keyboard()
            tbbox = Gtk.VBox(homogeneous=False, spacing=0)
            tbbox.show()
            self.tz = TimeZone(self.next_button)
            get_tz = self.tz.get_model()
            tbbox.pack_start(get_tz, True, True, 0)
            label = Gtk.Label(label="TimeZone")
            self.notebook.insert_page(tbbox, label, 2)
            self.window.show_all()
            self.notebook.next_page()
            self.next_button.set_sensitive(True)
        elif page == 2:
            #self.tz.save_timezone()
            tbbox = Gtk.VBox(homogeneous=False, spacing=0)
            tbbox.show()
            self.netsetup = network_setup(self.next_button)
            get_netsetup = self.netsetup.get_model()
            tbbox.pack_start(get_netsetup, True, True, 0)
            label = Gtk.Label(label="Network")
            self.notebook.insert_page(tbbox, label, 3)
            self.window.show_all()
            self.notebook.next_page()
            self.skip_button.hide()
            self.next_button.set_sensitive(True)
        elif page == 3:
            Rbox = Gtk.VBox(homogeneous=False, spacing=0)
            Rbox.show()
            self.adminuser = AddUser(self.next_button)
            get_adminuser = self.adminuser.get_model()
            Rbox.pack_start(get_adminuser, True, True, 0)
            label = Gtk.Label(label="Root Password")
            self.notebook.insert_page(Rbox, label, 4)
            self.window.show_all()
            self.notebook.next_page()
            self.skip_button.hide()
            self.next_button.set_sensitive(False)
        # elif page == 4:
        #     #self.adminuser.save_adminuser()
        #     Abox = Gtk.VBox(homogeneous=False, spacing=0)
        #     Abox.show()
        #     self.adduser = AddUsers(self.next_button)
        #     get_adduser = self.adduser.get_model()
        #     Abox.pack_start(get_adduser, True, True, 0)
        #     label = Gtk.Label(label="Adding User")
        #     self.notebook.insert_page(Abox, label, 5)
        #     self.next_button.set_label("Install")
        #     self.window.show_all()
        #     self.notebook.next_page()
        #     self.next_button.set_sensitive(False)
        if page == 4:
            # self.adminuser.save_adminuser()
            # automatic hostname setup
            #
            Ibox = Gtk.VBox(False, 0)
            Ibox.show()
            install = setup_window()
            get_install = install.get_model()
            Ibox.pack_start(get_install, True, True, 0)
            label = Gtk.Label("Installation")
            self.notebook.insert_page(Ibox, label, 5)
            self.notebook.next_page()
            instpro = installProgress(
                self.window,
                self.welcome,
                self.kb,
                self.tz,
                self.adminuser
            )
            progressBar = instpro.getProgressBar()
            box1 = Gtk.VBox(False, 0)
            box1.show()
            label = Gtk.Label(label="Progress Bar")
            box1.pack_end(progressBar, False, False, 0)
            self.nbButton.insert_page(box1, label, 1)
            self.nbButton.next_page()
            self.window.show_all()
            pass

    def skip_page(self, widget):
        """Go back to the previous window."""
        pass

    def __init__(self):
        """Were the Main window start."""
        self.window = Gtk.Window()
        self.window.connect("delete_event", self.delete)
        self.window.set_border_width(0)
        self.window.set_default_size(800, 500)
        self.window.set_size_request(800, 500)
        self.window.set_title("GhostBSD Initial Setup")
        self.window.set_border_width(0)
        self.window.set_icon_from_file(logo)
        mainHBox = Gtk.HBox(homogeneous=False, spacing=0)
        mainHBox.show()
        mainVbox = Gtk.VBox(homogeneous=False, spacing=0)
        mainVbox.show()
        self.window.add(mainHBox)
        mainHBox.pack_start(mainVbox, True, True, 0)
        self.notebook = Gtk.Notebook()
        mainVbox.pack_start(self.notebook, True, True, 0)
        self.notebook.show()
        self.notebook.set_show_tabs(False)
        self.notebook.set_show_border(False)
        welcome_box = Gtk.VBox(homogeneous=False, spacing=0)
        welcome_box.show()
        self.welcome = Language()
        get_types = self.welcome.get_model()
        welcome_box.pack_start(get_types, True, True, 0)
        label = Gtk.Label(label="Welcome")
        self.notebook.insert_page(welcome_box, label, 0)
        # Set what page to start at type of installation
        self.notebook.set_current_page(0)
        self.table = Gtk.Table(n_rows=1, n_columns=6, homogeneous=True)
        self.skip_button = Gtk.Button(label='Skip')
        self.skip_button.connect("clicked", self.skip_page)
        self.table.attach(self.skip_button, 4, 5, 0, 1)
        self.next_button = Gtk.Button(label='Next')
        self.next_button.connect("clicked", self.next_page)
        self.table.attach(self.next_button, 5, 6, 0, 1)
        self.table.set_col_spacings(5)
        self.table.show()
        self.nbButton = Gtk.Notebook()
        mainVbox.pack_end(self.nbButton, False, False, 5)
        self.nbButton.show()
        self.nbButton.set_show_tabs(False)
        self.nbButton.set_show_border(False)
        label = Gtk.Label(label="Button")
        self.nbButton.insert_page(self.table, label, 0)
        self.window.show_all()
        self.skip_button.hide()


MainWindow()
Gtk.main()
